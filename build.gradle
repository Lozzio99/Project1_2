plugins {
    id 'java'
    id 'application'
    id 'jacoco'
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    // https://mvnrepository.com/artifact/au.com.bytecode/opencsv
    implementation group: 'au.com.bytecode', name: 'opencsv', version: '2.4'
    implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.8'
    compileOnly 'org.jetbrains:annotations:20.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
}

test {
    useJUnitPlatform()
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
    maxParallelForks 1
    testLogging.showStandardStreams true
    minHeapSize "128m"
    maxHeapSize "512m"
    beforeTest { descriptor -> logger.lifecycle "Running test: " + descriptor as String }
    failFast true

    onOutput { descriptor, event ->
        if (event.destination == TestOutputEvent.Destination.StdErr) {
            logger.error "Test: " + descriptor + ", error: " + event.message as Error
        } else {
            logger.lifecycle  "Test: " + descriptor + ", output: " + event.message as String
        }
    }
    //onOutput { descriptor, event -> logger.lifecycle("Test: " + descriptor + " \noutput: " + event.message )}
    finalizedBy jacocoTestReport // report is always generated after tests run
}




ext{
    javaMainClass = "src/main/java/group17/Main.java"
}


application {
    getMainClass().set javaMainClass
}

