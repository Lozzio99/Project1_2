<?xml version="1.0" encoding="UTF-8"?>
<project name="project_1.2" default="all">


  <property file="build.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->

  <!-- Compiler options -->

  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.egg"/>
    <include name="*.zip"/>
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.ear"/>
    <include name="*.jar"/>
    <include name="*.ane"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>


  <!-- Project Libraries -->

  <path id="library.gradle:_org.apiguardian:apiguardian-api:1.1.0.classpath">
    <pathelement
            location="${basedir}/../../Gradle/caches/modules-2/files-2.1/org.apiguardian/apiguardian-api/1.1.0/fc9dff4bb36d627bdc553de77e1f17efd790876c/apiguardian-api-1.1.0.jar"/>
  </path>

  <path id="library.gradle:_org.junit.jupiter:junit-jupiter-api:5.7.0.classpath">
    <pathelement
            location="${basedir}/../../Gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-api/5.7.0/b25f3815c4c1860a73041e733a14a0379d00c4d5/junit-jupiter-api-5.7.0.jar"/>
  </path>

  <path id="library.gradle:_org.junit.jupiter:junit-jupiter-engine:5.7.0.classpath">
    <pathelement
            location="${basedir}/../../Gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-engine/5.7.0/d9044d6b45e2232ddd53fa56c15333e43d1749fd/junit-jupiter-engine-5.7.0.jar"/>
  </path>

  <path id="library.gradle:_org.junit.jupiter:junit-jupiter-params:5.7.0.classpath">
    <pathelement
            location="${basedir}/../../Gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-params/5.7.0/521dbecace93d5d7ef13a74aab231befd7954424/junit-jupiter-params-5.7.0.jar"/>
  </path>

  <path id="library.gradle:_org.junit.jupiter:junit-jupiter:5.7.0.classpath">
    <pathelement
            location="${basedir}/../../Gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter/5.7.0/3152d152da916ccbb0715f89f7f873f45362ad7f/junit-jupiter-5.7.0.jar"/>
  </path>

  <path id="library.gradle:_org.junit.platform:junit-platform-commons:1.7.0.classpath">
    <pathelement
            location="${basedir}/../../Gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-commons/1.7.0/84e309fbf21d857aac079a3c1fffd84284e1114d/junit-platform-commons-1.7.0.jar"/>
  </path>

  <path id="library.gradle:_org.junit.platform:junit-platform-engine:1.7.0.classpath">
    <pathelement
            location="${basedir}/../../Gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-engine/1.7.0/eadb73c5074a4ac71061defd00fc176152a4d12c/junit-platform-engine-1.7.0.jar"/>
  </path>

  <path id="library.gradle:_org.opentest4j:opentest4j:1.2.0.classpath">
    <pathelement
            location="${basedir}/../../Gradle/caches/modules-2/files-2.1/org.opentest4j/opentest4j/1.2.0/28c11eb91f9b6d8e200631d46e20a7f407f2a046/opentest4j-1.2.0.jar"/>
  </path>

  <!-- Modules -->


  <!-- Module Project_1.2 -->

  <dirname property="module.project_1.2.basedir" file="${ant.file}"/>


  <property name="compiler.args.project_1.2" value="-encoding UTF-8 -source 15 -target 15 ${compiler.args}"/>

  <property name="project_1.2.output.dir" value="${module.project_1.2.basedir}/out/production/Project_1.2"/>
  <property name="project_1.2.testoutput.dir" value="${module.project_1.2.basedir}/out/test/Project_1.2"/>

  <path id="project_1.2.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>

  <path id="project_1.2.module.production.classpath"/>

  <path id="project_1.2.runtime.production.module.classpath">
    <pathelement location="${project_1.2.output.dir}"/>
  </path>

  <path id="project_1.2.module.classpath">
    <pathelement location="${project_1.2.output.dir}"/>
  </path>

  <path id="project_1.2.runtime.module.classpath">
    <pathelement location="${project_1.2.testoutput.dir}"/>
    <pathelement location="${project_1.2.output.dir}"/>
  </path>


  <patternset id="excluded.from.module.project_1.2">
    <patternset refid="ignored.files"/>
  </patternset>

  <patternset id="excluded.from.compilation.project_1.2">
    <patternset refid="excluded.from.module.project_1.2"/>
  </patternset>


  <target name="compile.module.project_1.2"
          depends="compile.module.project_1.2.production,compile.module.project_1.2.tests"
          description="Compile module Project_1.2"/>

  <target name="compile.module.project_1.2.production" description="Compile module Project_1.2; production classes"/>

  <target name="compile.module.project_1.2.tests" depends="compile.module.project_1.2.production"
          description="compile module Project_1.2; test classes" unless="skip.tests"/>

  <target name="clean.module.project_1.2" description="cleanup module">
    <delete dir="${project_1.2.output.dir}"/>
    <delete dir="${project_1.2.testoutput.dir}"/>
  </target>


  <!-- Module Project_1.2.main -->

  <dirname property="module.project_1.2.main.basedir" file="${ant.file}"/>


  <property name="compiler.args.project_1.2.main" value="-encoding UTF-8 -source 15 -target 15 ${compiler.args}"/>

  <property name="project_1.2.main.output.dir" value="${module.project_1.2.main.basedir}/build/classes/java/main"/>
  <property name="project_1.2.main.testoutput.dir" value="${module.project_1.2.main.basedir}/build/classes/java/main"/>

  <path id="project_1.2.main.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>

  <path id="project_1.2.main.module.production.classpath">
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-params:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-api:5.7.0.classpath"/>
    <path refid="library.gradle:_org.apiguardian:apiguardian-api:1.1.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-commons:1.7.0.classpath"/>
    <path refid="library.gradle:_org.opentest4j:opentest4j:1.2.0.classpath"/>
  </path>

  <path id="project_1.2.main.runtime.production.module.classpath">
    <pathelement location="${project_1.2.main.output.dir}"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-params:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-api:5.7.0.classpath"/>
    <path refid="library.gradle:_org.apiguardian:apiguardian-api:1.1.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-commons:1.7.0.classpath"/>
    <path refid="library.gradle:_org.opentest4j:opentest4j:1.2.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-engine:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-engine:1.7.0.classpath"/>
  </path>

  <path id="project_1.2.main.module.classpath">
    <pathelement location="${project_1.2.main.output.dir}"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-params:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-api:5.7.0.classpath"/>
    <path refid="library.gradle:_org.apiguardian:apiguardian-api:1.1.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-commons:1.7.0.classpath"/>
    <path refid="library.gradle:_org.opentest4j:opentest4j:1.2.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-engine:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-engine:1.7.0.classpath"/>
  </path>

  <path id="project_1.2.main.runtime.module.classpath">
    <pathelement location="${project_1.2.main.output.dir}"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-params:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-api:5.7.0.classpath"/>
    <path refid="library.gradle:_org.apiguardian:apiguardian-api:1.1.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-commons:1.7.0.classpath"/>
    <path refid="library.gradle:_org.opentest4j:opentest4j:1.2.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-engine:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-engine:1.7.0.classpath"/>
  </path>


  <patternset id="excluded.from.module.project_1.2.main">
    <patternset refid="ignored.files"/>
  </patternset>

  <patternset id="excluded.from.compilation.project_1.2.main">
    <patternset refid="excluded.from.module.project_1.2.main"/>
  </patternset>

  <path id="project_1.2.main.module.sourcepath">
    <dirset dir="${module.project_1.2.main.basedir}/src/main">
      <include name="resources"/>
      <include name="java"/>
    </dirset>
  </path>


  <target name="compile.module.project_1.2.main"
          depends="compile.module.project_1.2.main.production,compile.module.project_1.2.main.tests"
          description="Compile module Project_1.2.main"/>

  <target name="compile.module.project_1.2.main.production"
          description="Compile module Project_1.2.main; production classes">
    <mkdir dir="${project_1.2.main.output.dir}"/>
    <javac destdir="${project_1.2.main.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
           memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.project_1.2.main}"/>
      <bootclasspath refid="project_1.2.main.module.bootclasspath"/>
      <classpath refid="project_1.2.main.module.production.classpath"/>
      <src refid="project_1.2.main.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.project_1.2.main"/>
    </javac>

    <copy todir="${project_1.2.main.output.dir}">
      <fileset dir="${module.project_1.2.main.basedir}/src/main/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.project_1.2.main.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>

  <target name="compile.module.project_1.2.main.tests" depends="compile.module.project_1.2.main.production"
          description="compile module Project_1.2.main; test classes" unless="skip.tests"/>

  <target name="clean.module.project_1.2.main" description="cleanup module">
    <delete dir="${project_1.2.main.output.dir}"/>
    <delete dir="${project_1.2.main.testoutput.dir}"/>
  </target>


  <!-- Module Project_1.2.test -->

  <dirname property="module.project_1.2.test.basedir" file="${ant.file}"/>


  <property name="compiler.args.project_1.2.test" value="-encoding UTF-8 -source 15 -target 15 ${compiler.args}"/>

  <property name="project_1.2.test.output.dir" value="undefined"/>
  <property name="project_1.2.test.testoutput.dir" value="${module.project_1.2.test.basedir}/build/classes/java/test"/>

  <path id="project_1.2.test.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>

  <path id="project_1.2.test.module.production.classpath">
    <pathelement location="${project_1.2.main.output.dir}"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-params:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-api:5.7.0.classpath"/>
    <path refid="library.gradle:_org.apiguardian:apiguardian-api:1.1.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-commons:1.7.0.classpath"/>
    <path refid="library.gradle:_org.opentest4j:opentest4j:1.2.0.classpath"/>
  </path>

  <path id="project_1.2.test.runtime.production.module.classpath">
    <pathelement location="${project_1.2.main.output.dir}"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-params:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-api:5.7.0.classpath"/>
    <path refid="library.gradle:_org.apiguardian:apiguardian-api:1.1.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-commons:1.7.0.classpath"/>
    <path refid="library.gradle:_org.opentest4j:opentest4j:1.2.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-engine:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-engine:1.7.0.classpath"/>
  </path>

  <path id="project_1.2.test.module.classpath">
    <pathelement location="${project_1.2.main.output.dir}"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-params:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-api:5.7.0.classpath"/>
    <path refid="library.gradle:_org.apiguardian:apiguardian-api:1.1.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-commons:1.7.0.classpath"/>
    <path refid="library.gradle:_org.opentest4j:opentest4j:1.2.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-engine:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-engine:1.7.0.classpath"/>
  </path>

  <path id="project_1.2.test.runtime.module.classpath">
    <pathelement location="${project_1.2.test.testoutput.dir}"/>
    <pathelement location="${project_1.2.main.output.dir}"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-params:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-api:5.7.0.classpath"/>
    <path refid="library.gradle:_org.apiguardian:apiguardian-api:1.1.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-commons:1.7.0.classpath"/>
    <path refid="library.gradle:_org.opentest4j:opentest4j:1.2.0.classpath"/>
    <path refid="library.gradle:_org.junit.jupiter:junit-jupiter-engine:5.7.0.classpath"/>
    <path refid="library.gradle:_org.junit.platform:junit-platform-engine:1.7.0.classpath"/>
  </path>


  <patternset id="excluded.from.module.project_1.2.test">
    <patternset refid="ignored.files"/>
  </patternset>

  <patternset id="excluded.from.compilation.project_1.2.test">
    <patternset refid="excluded.from.module.project_1.2.test"/>
  </patternset>

  <path id="project_1.2.test.module.test.sourcepath">
    <dirset dir="${module.project_1.2.test.basedir}/src/test">
      <include name="java"/>
      <include name="resources"/>
    </dirset>
  </path>


  <target name="compile.module.project_1.2.test"
          depends="compile.module.project_1.2.test.production,compile.module.project_1.2.test.tests"
          description="Compile module Project_1.2.test"/>

  <target name="compile.module.project_1.2.test.production" depends="compile.module.project_1.2.main"
          description="Compile module Project_1.2.test; production classes"/>

  <target name="compile.module.project_1.2.test.tests" depends="compile.module.project_1.2.test.production"
          description="compile module Project_1.2.test; test classes" unless="skip.tests">
    <mkdir dir="${project_1.2.test.testoutput.dir}"/>
    <javac destdir="${project_1.2.test.testoutput.dir}" debug="${compiler.debug}"
           nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.project_1.2.test}"/>
      <bootclasspath refid="project_1.2.test.module.bootclasspath"/>
      <classpath refid="project_1.2.test.module.classpath"/>
      <src refid="project_1.2.test.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.project_1.2.test"/>
    </javac>

    <copy todir="${project_1.2.test.testoutput.dir}">
      <fileset dir="${module.project_1.2.test.basedir}/src/test/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.project_1.2.test.basedir}/src/test/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>

  <target name="clean.module.project_1.2.test" description="cleanup module">
    <delete dir="${project_1.2.test.output.dir}"/>
    <delete dir="${project_1.2.test.testoutput.dir}"/>
  </target>

  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>

  <target name="clean" depends="clean.module.project_1.2, clean.module.project_1.2.main, clean.module.project_1.2.test"
          description="cleanup all"/>

  <target name="build.modules"
          depends="init, clean, compile.module.project_1.2, compile.module.project_1.2.main, compile.module.project_1.2.test"
          description="build all modules"/>

  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.project_1.2.main:jar" value="${basedir}/out/artifacts/Project_1_2_main_jar"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.Project_1.2.main_jar.jar" value="${artifacts.temp.dir}/Project_1.2.main_jar.jar"/>
  </target>

  <target name="artifact.project_1.2.main:jar" depends="init.artifacts, compile.module.project_1.2.main"
          description="Build &#39;Project_1.2.main:jar&#39; artifact">
    <property name="artifact.temp.output.project_1.2.main:jar" value="${artifacts.temp.dir}/Project_1_2_main_jar"/>
    <mkdir dir="${artifact.temp.output.project_1.2.main:jar}"/>
    <jar destfile="${temp.jar.path.Project_1.2.main_jar.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${project_1.2.main.output.dir}"/>
      <zipfileset
              src="${basedir}/../../Users/Lorenzo/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-engine/5.6.2/c0833bd6de29dd77f8d071025b97b8b434308cd3/junit-jupiter-engine-5.6.2.jar"/>
      <zipfileset
              src="${basedir}/../../Users/Lorenzo/.gradle/caches/modules-2/files-2.1/org.apiguardian/apiguardian-api/1.1.0/fc9dff4bb36d627bdc553de77e1f17efd790876c/apiguardian-api-1.1.0.jar"/>
      <zipfileset
              src="${basedir}/../../Users/Lorenzo/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-params/5.6.2/f2a64a42cf73077062c2386db0598062b7480d91/junit-jupiter-params-5.6.2.jar"/>
      <zipfileset
              src="${basedir}/../../Users/Lorenzo/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter-api/5.6.2/c9ba885abfe975cda123bf6f8f0a69a1b46956d0/junit-jupiter-api-5.6.2.jar"/>
      <zipfileset
              src="${basedir}/../../Users/Lorenzo/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-engine/1.6.2/1752cad2579e20c2b224602fe846fc660fb35805/junit-platform-engine-1.6.2.jar"/>
      <zipfileset
              src="${basedir}/../../Users/Lorenzo/.gradle/caches/modules-2/files-2.1/org.junit.jupiter/junit-jupiter/5.6.2/b5c481685b6a8ca91c0d46f28f886a444354daa5/junit-jupiter-5.6.2.jar"/>
      <zipfileset
              src="${basedir}/../../Users/Lorenzo/.gradle/caches/modules-2/files-2.1/org.opentest4j/opentest4j/1.2.0/28c11eb91f9b6d8e200631d46e20a7f407f2a046/opentest4j-1.2.0.jar"/>
      <zipfileset
              src="${basedir}/../../Users/Lorenzo/.gradle/caches/modules-2/files-2.1/org.junit.platform/junit-platform-commons/1.6.2/7644a14b329e76b5fe487628b50fb5eab6ba7d26/junit-platform-commons-1.6.2.jar"/>
    </jar>
    <copy file="${temp.jar.path.Project_1.2.main_jar.jar}"
          tofile="${artifact.temp.output.project_1.2.main:jar}/Project_1.2.main_jar.jar"/>
  </target>

  <target name="build.all.artifacts" depends="artifact.project_1.2.main:jar" description="Build all artifacts">
    <mkdir dir="${artifact.output.project_1.2.main:jar}"/>
    <copy todir="${artifact.output.project_1.2.main:jar}">
      <fileset dir="${artifact.temp.output.project_1.2.main:jar}"/>
    </copy>

    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>

  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>